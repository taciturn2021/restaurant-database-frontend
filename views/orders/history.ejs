<!DOCTYPE html>
<html lang="en">
<%- include('../partials/head') %>
<body>
<%- include('../partials/nav') %>

<div class="container">
    <div class="header-section">
        <h2>Order History</h2>
        <a href="/orders" class="btn btn-primary">Back to Current Orders</a>
    </div>

    <div class="table-container">
        <table>
            <thead>
            <tr>
                <th>Order #</th>
                <th>Date</th>
                <th>Table</th>
                <th>Items</th>
                <th>Total</th>
                <th>Payment Status</th>
                <th>Review</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody>
            <% closedOrders.forEach(order => { %>
                <tr>
                    <td><%= order._id %></td>
                    <td><%= new Date(order.order_time).toLocaleDateString() %></td>
                    <td>Table <%= order.table_id.number %></td>
                    <td>
                        <ul>
                            <% order.order_items.forEach(item => { %>
                                <li><%= item.menu_item.name %> x <%= item.quantity %></li>
                            <% }) %>
                        </ul>
                    </td>
                    <td>$<%= order.total_amount.toFixed(2) %></td>
                    <td><%= order.payment_status %></td>
                    <td>
                        <% if (order.review) { %>
                            ⭐ <%= order.review.rating %>/5
                        <% } else { %>
                            No Review
                        <% } %>
                    </td>
                    <td>
                        <% if (order.payment_status === 'Pending') { %>
                            <button onclick="showPaymentModal('<%= order._id %>', <%= order.total_amount %>)" class="btn btn-primary btn-sm">Pay</button>
                        <% } %>
                        <% if (!order.review) { %>
                            <button onclick="showReviewModal('<%= order._id %>')" class="btn btn-secondary btn-sm">Add Review</button>
                        <% } %>
                    </td>
                </tr>
            <% }) %>
            </tbody>
        </table>
    </div>
</div>

<!-- Payment Modal -->
<div id="paymentModal" class="modal">
    <div class="modal-content">
        <h3>Process Payment</h3>
        <form id="paymentForm">
            <input type="hidden" id="paymentOrderId" name="orderId">
            <div class="form-group">
                <label>Amount:</label>
                <input type="text" id="paymentAmount" readonly class="form-input">
            </div>
            <div class="form-group">
                <label>Payment Method:</label>
                <select name="payment_method" required class="form-input">
                    <option value="Credit Card">Credit Card</option>
                    <option value="Cash">Cash</option>
                    <option value="Debit Card">Debit Card</option>
                </select>
            </div>
            <div class="form-actions">
                <button type="submit" class="btn btn-primary">Process Payment</button>
                <button type="button" onclick="closePaymentModal()" class="btn btn-secondary">Cancel</button>
            </div>
        </form>
    </div>
</div>

<!-- Review Modal -->
<div id="reviewModal" class="modal">
    <div class="modal-content">
        <h3>Add Review</h3>
        <form id="reviewForm">
            <input type="hidden" id="reviewOrderId" name="orderId">
            <div class="form-group">
                <label>Rating:</label>
                <select name="rating" required class="form-input">
                    <option value="5">⭐⭐⭐⭐⭐ (5)</option>
                    <option value="4">⭐⭐⭐⭐ (4)</option>
                    <option value="3">⭐⭐⭐ (3)</option>
                    <option value="2">⭐⭐ (2)</option>
                    <option value="1">⭐ (1)</option>
                </select>
            </div>
            <div class="form-group">
                <label>Comment:</label>
                <textarea name="comment" class="form-input" rows="3"></textarea>
            </div>
            <div class="form-actions">
                <button type="submit" class="btn btn-primary">Submit Review</button>
                <button type="button" onclick="closeReviewModal()" class="btn btn-secondary">Cancel</button>
            </div>
        </form>
    </div>
</div>

<style>
    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.5);
    }

    .modal-content {
        background-color: white;
        margin: 15% auto;
        padding: 20px;
        border-radius: 5px;
        width: 80%;
        max-width: 500px;
    }
</style>

<script>
    function showPaymentModal(orderId, amount) {
        document.getElementById('paymentOrderId').value = orderId;
        document.getElementById('paymentAmount').value = `$${amount.toFixed(2)}`;
        document.getElementById('paymentModal').style.display = 'block';
    }

    function closePaymentModal() {
        document.getElementById('paymentModal').style.display = 'none';
    }

    function showReviewModal(orderId) {
        document.getElementById('reviewOrderId').value = orderId;
        document.getElementById('reviewModal').style.display = 'block';
    }

    function closeReviewModal() {
        document.getElementById('reviewModal').style.display = 'none';
    }

    // Handle payment form submission
    document.getElementById('paymentForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        const formData = new FormData(e.target);
        const orderId = document.getElementById('paymentOrderId').value;

        try {
            const response = await fetch(`/orders/${orderId}/payment`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    payment_method: formData.get('payment_method')
                })
            });

            if (response.ok) {
                closePaymentModal();
                location.reload();
            } else {
                alert('Payment processing failed. Please try again.');
            }
        } catch (error) {
            console.error('Error:', error);
            alert('An error occurred while processing payment.');
        }
    });

    // Handle review form submission
    document.getElementById('reviewForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        const formData = new FormData(e.target);
        const orderId = document.getElementById('reviewOrderId').value;

        try {
            const response = await fetch(`/orders/${orderId}/review`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    rating: formData.get('rating'),
                    comment: formData.get('comment')
                })
            });

            if (response.ok) {
                closeReviewModal();
                location.reload();
            } else {
                alert('Failed to submit review. Please try again.');
            }
        } catch (error) {
            console.error('Error:', error);
            alert('An error occurred while submitting review.');
        }
    });
</script>

</body>
</html>